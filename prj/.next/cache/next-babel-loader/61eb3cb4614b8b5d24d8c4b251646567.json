{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport nc from 'next-connect';\nimport notes from \"../../../src/data/data\";\nconst handler = nc().post((req, res) => {\n  const note = _objectSpread(_objectSpread({}, req.body), {}, {\n    id: Date.now()\n  });\n\n  notes.push(note);\n  res.json({\n    data: note\n  });\n}).get((req, res) => {\n  res.json({\n    data: note\n  });\n});\nexport default handler;","map":{"version":3,"sources":["/Users/isaac/Desktop/dev/nj/prj/pages/api/note/index.js"],"names":["nc","notes","handler","post","req","res","note","body","id","Date","now","push","json","data","get"],"mappings":";;;;;;AAAA,OAAOA,EAAP,MAAe,cAAf;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AAGA,MAAMC,OAAO,GAAIF,EAAE,GACdG,IADY,CACP,CAACC,GAAD,EAAMC,GAAN,KAAY;AACd,QAAMC,IAAI,mCACHF,GAAG,CAACG,IADD;AAENC,IAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL;AAFE,IAAV;;AAIAT,EAAAA,KAAK,CAACU,IAAN,CAAWL,IAAX;AACAD,EAAAA,GAAG,CAACO,IAAJ,CAAS;AAACC,IAAAA,IAAI,EAAEP;AAAP,GAAT;AACH,CARY,EASZQ,GATY,CASR,CAACV,GAAD,EAAKC,GAAL,KAAY;AACbA,EAAAA,GAAG,CAACO,IAAJ,CAAS;AAACC,IAAAA,IAAI,EAAEP;AAAP,GAAT;AACH,CAXY,CAAjB;AAcA,eAAeJ,OAAf","sourcesContent":["import nc from 'next-connect'\nimport notes from \"../../../src/data/data\"\n\n\nconst handler  = nc()\n    .post((req, res)=>{\n        const note = {\n            ...req.body,\n            id: Date.now()\n        }\n        notes.push(note)\n        res.json({data: note})\n    })\n    .get((req,res)=> {\n        res.json({data: note})\n    })\n\n\nexport default handler;\n"]},"metadata":{},"sourceType":"module"}